apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pihole
  namespace: pihole
  labels:
    app: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  serviceName: "pihole"
  replicas: 1
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
      - name: pihole
        image: pihole/pihole:v5.2.1
        env:
        - name: TZ
          value: "Europe/Berlin"
        - name: WEBPASSWORD
          value: "admin"
        ports:
        - containerPort: 80
          name: web
        - containerPort: 53
          name: dns
        volumeMounts:
        - name: etc-pihole
          mountPath: "/etc/pihole"
        - name: etc-dnsmasq-d
          mountPath: "/etc/dnsmasq.d"
      - name: pihole-exporter
        image: ekofr/pihole-exporter:0.0.9
        env:
        - name: PIHOLE_HOSTNAME
          value: "127.0.0.1"
        - name: PIHOLE_PASSWORD
          value: admin
        - name: PORT
          value: "9617"
        ports:
        - containerPort: 9617
          name: metrics
      - name: cloudflared
        image: axeal/cloudflared:2020.11.11
        env:
        - name: TUNNEL_DNS_PORT
          value: "5053"
        args:
        - "proxy-dns"
  volumeClaimTemplates:
  - metadata:
      name: etc-pihole
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: etc-dnsmasq-d
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: longhorn
      resources:
        requests:
          storage: 1Gi

---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: pihole
  namespace: pihole
spec:
  selector:
    matchLabels:
      app: pihole
  podMetricsEndpoints:
  - port: metrics

---
apiVersion: v1
kind: Service
metadata:
  name: pihole
  namespace: pihole
spec:
  selector:
    app: pihole
  ports:
  - port: 80
    targetPort: 80
    name: pihole-admin
  - port: 53
    targetPort: 53
    protocol: TCP
    name: dns-tcp
  - port: 53
    targetPort: 53
    protocol: UDP
    name: dns-udp
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: pihole-udp-lb
  namespace: pihole
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
spec:
  selector:
    app: pihole
  loadBalancerIP: 10.50.29.240
  ports:
  - port: 53
    targetPort: 53
    protocol: UDP
    name: dns
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: pihole-tcp-lb
  namespace: pihole
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
spec:
  selector:
    app: pihole
  loadBalancerIP: 10.50.29.240
  ports:
  - port: 53
    targetPort: 53
    protocol: TCP
    name: dns
  type: LoadBalancer

---
apiVersion:  networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole
  namespace: pihole
  annotations:
    cert-manager.io/cluster-issuer: cluster-issuer
    nginx.ingress.kubernetes.io/auth-url: https://auth.axe.al/oauth2/auth
    nginx.ingress.kubernetes.io/auth-signin: https://auth.axe.al/oauth2/start?rd=https://$host$escaped_request_uri
spec:
  tls:
  - hosts:
    - pihole.home.axe.al
    secretName: pihole-tls
  rules:
  - host: pihole.home.axe.al
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pihole
            port:
              number: 80
