apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 24h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '76.2.1'
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: monitoring
      interval: 24h
  install:
    skipCRDs: true
  values:
    crds:
      upgradeJob:
        enabled: true
    prometheus-node-exporter:
      extraArgs:
          - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
          - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
          - --collector.textfile.directory=/host/root/var/lib/node_exporter/textfile_collector
    alertmanager:
      enabled: false
    grafana:
      additionalDataSources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.logging:3100
        editable: false
        basicAuth: false
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: cluster-issuer
          nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.axe.al/oauth2/start?rd=https://$host$escaped_request_uri
        hosts:
        - grafana.axe.al
        tls:
        - secretName: grafana-ingress-crt
          hosts:
          - grafana.axe.al
      sidecar:
        dashboards:
          searchNamespace: ALL
    prometheus:
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: cluster-issuer
          nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.oauth2-proxy.svc.cluster.local/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://auth.axe.al/oauth2/start?rd=https://$host$escaped_request_uri
        hosts:
        - prometheus.axe.al
        tls:
        - secretName: prometheus-ingress-crt
          hosts:
          - prometheus.axe.al
      prometheusSpec:
        externalLabels:
          cluster: home.axe.al
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 50Gi
              accessModes:
              - ReadWriteOnce
              storageClassName: local-path
    kubeEtcd:
      enabled: false
    kubeProxy:
      service:
        enabled: false
      serviceMonitor:
        enabled: false
    kubeScheduler:
      enabled: false
    kubeControllerManager:
      enabled: false
    kube-state-metrics:
      metricLabelsAllowlist:
        - nodes=[node-role.kubernetes.io/control-plane]
